// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI

public enum WindowsFoundation_TypedEventHandlerBinding {
}

// MARK: Windows.Foundation.TypedEventHandler`2<Windows.Foundation.IMemoryBufferReference, Object>

extension WindowsFoundation_TypedEventHandlerBinding {
    internal enum IMemoryBufferReference_Object: WindowsRuntime.DelegateBinding {
        public typealias SwiftObject = WindowsFoundation_TypedEventHandler<WindowsFoundation_IMemoryBufferReference?, WindowsRuntime.IInspectable?>
        public typealias ABIStruct = SWRT_WindowsFoundation_TypedEventHandler_WindowsFoundation_IMemoryBufferReference_IInspectable

        public static let typeName = "Windows.Foundation.TypedEventHandler`2<Windows.Foundation.IMemoryBufferReference, Object>"

        public static var interfaceID: COM.COMInterfaceID {
            uuidof(ABIStruct.self)
        }

        public static var ireferenceID: COM.COMInterfaceID {
            COMInterfaceID(0x78398765, 0xBDB0, 0x5D1E, 0x864A, 0x6B55F491DAD8)
        }

        public static var ireferenceArrayID: COM.COMInterfaceID {
            COMInterfaceID(0xB6C4BB35, 0x49B8, 0x5E3F, 0xB54E, 0x6FFFB671F062)
        }

        public static func _wrap(_ reference: consuming ABIReference) -> SwiftObject {
            Import(_wrapping: consume reference).invoke
        }

        public static func toCOM(_ object: @escaping SwiftObject) throws -> ABIReference {
            ExportedDelegate<Self>(object).toCOM()
        }

        private final class Import: COMImport<IMemoryBufferReference_Object> {
            public func invoke(_ sender: WindowsFoundation_IMemoryBufferReference?, _ args: WindowsRuntime.IInspectable?) throws {
                try _interop.invoke(sender, args)
            }
        }

        public static var virtualTablePointer: UnsafeRawPointer {
            .init(withUnsafePointer(to: &virtualTable) { $0 })
        }

        private static var virtualTable = SWRT_WindowsFoundation_TypedEventHandler_WindowsFoundation_IMemoryBufferReference_IInspectable_VirtualTable(
            QueryInterface: { IUnknownVirtualTable.QueryInterface($0, $1, $2) },
            AddRef: { IUnknownVirtualTable.AddRef($0) },
            Release: { IUnknownVirtualTable.Release($0) },
            Invoke: { this, sender, args in _implement(this) { this in
                let sender_swift = WindowsFoundation_IMemoryBufferReferenceBinding.fromABI(sender)
                let args_swift = WindowsRuntime.IInspectableBinding.fromABI(args)
                try this(sender_swift, args_swift)
            } }
        )
    }
}