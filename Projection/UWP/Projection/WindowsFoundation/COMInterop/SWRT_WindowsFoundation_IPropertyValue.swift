// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI

public func uuidof(_: SWRT_WindowsFoundation_IPropertyValue.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4BD682DD, 0x7554, 0x40E9, 0x9A9B, 0x82654EDE7E62)
}

extension COM.COMInterop where ABIStruct == SWRT_WindowsFoundation_IPropertyValue {
    public func get_Type() throws -> WindowsFoundation_PropertyType {
        var _result: SWRT_WindowsFoundation_PropertyType = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_Type(this, &_result))
        return WindowsFoundation_PropertyType.fromABI(_result)
    }

    public func get_IsNumericScalar() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.get_IsNumericScalar(this, &_result))
        return _result
    }

    public func getUInt8() throws -> Swift.UInt8 {
        var _result: Swift.UInt8 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt8(this, &_result))
        return _result
    }

    public func getInt16() throws -> Swift.Int16 {
        var _result: Swift.Int16 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt16(this, &_result))
        return _result
    }

    public func getUInt16() throws -> Swift.UInt16 {
        var _result: Swift.UInt16 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt16(this, &_result))
        return _result
    }

    public func getInt32() throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt32(this, &_result))
        return _result
    }

    public func getUInt32() throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt32(this, &_result))
        return _result
    }

    public func getInt64() throws -> Swift.Int64 {
        var _result: Swift.Int64 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt64(this, &_result))
        return _result
    }

    public func getUInt64() throws -> Swift.UInt64 {
        var _result: Swift.UInt64 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt64(this, &_result))
        return _result
    }

    public func getSingle() throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetSingle(this, &_result))
        return _result
    }

    public func getDouble() throws -> Swift.Double {
        var _result: Swift.Double = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDouble(this, &_result))
        return _result
    }

    public func getChar16() throws -> WindowsRuntime.Char16 {
        var _result: Swift.UInt16 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetChar16(this, &_result))
        return WindowsRuntime.Char16Binding.fromABI(_result)
    }

    public func getBoolean() throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetBoolean(this, &_result))
        return _result
    }

    public func getString() throws -> Swift.String {
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetString(this, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func getGuid() throws -> COM.GUID {
        var _result: SWRT_Guid = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetGuid(this, &_result))
        return WindowsRuntime.GuidBinding.fromABI(_result)
    }

    public func getDateTime() throws -> WindowsFoundation_DateTime {
        var _result: SWRT_WindowsFoundation_DateTime = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDateTime(this, &_result))
        return WindowsFoundation_DateTime.fromABI(_result)
    }

    public func getTimeSpan() throws -> WindowsFoundation_TimeSpan {
        var _result: SWRT_WindowsFoundation_TimeSpan = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetTimeSpan(this, &_result))
        return WindowsFoundation_TimeSpan.fromABI(_result)
    }

    public func getPoint() throws -> WindowsFoundation_Point {
        var _result: SWRT_WindowsFoundation_Point = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetPoint(this, &_result))
        return WindowsFoundation_Point.fromABI(_result)
    }

    public func getSize() throws -> WindowsFoundation_Size {
        var _result: SWRT_WindowsFoundation_Size = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetSize(this, &_result))
        return WindowsFoundation_Size.fromABI(_result)
    }

    public func getRect() throws -> WindowsFoundation_Rect {
        var _result: SWRT_WindowsFoundation_Rect = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetRect(this, &_result))
        return WindowsFoundation_Rect.fromABI(_result)
    }

    public func getUInt8Array(_ value: inout [Swift.UInt8]) throws {
        var value_abi: COM.COMArray<Swift.UInt8> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.UInt8Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt8Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.UInt8Binding>.fromABI(consuming: &value_abi)
    }

    public func getInt16Array(_ value: inout [Swift.Int16]) throws {
        var value_abi: COM.COMArray<Swift.Int16> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.Int16Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt16Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.Int16Binding>.fromABI(consuming: &value_abi)
    }

    public func getUInt16Array(_ value: inout [Swift.UInt16]) throws {
        var value_abi: COM.COMArray<Swift.UInt16> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.UInt16Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt16Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.UInt16Binding>.fromABI(consuming: &value_abi)
    }

    public func getInt32Array(_ value: inout [Swift.Int32]) throws {
        var value_abi: COM.COMArray<Swift.Int32> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.Int32Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt32Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.Int32Binding>.fromABI(consuming: &value_abi)
    }

    public func getUInt32Array(_ value: inout [Swift.UInt32]) throws {
        var value_abi: COM.COMArray<Swift.UInt32> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.UInt32Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt32Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.UInt32Binding>.fromABI(consuming: &value_abi)
    }

    public func getInt64Array(_ value: inout [Swift.Int64]) throws {
        var value_abi: COM.COMArray<Swift.Int64> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.Int64Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInt64Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.Int64Binding>.fromABI(consuming: &value_abi)
    }

    public func getUInt64Array(_ value: inout [Swift.UInt64]) throws {
        var value_abi: COM.COMArray<Swift.UInt64> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.UInt64Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetUInt64Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.UInt64Binding>.fromABI(consuming: &value_abi)
    }

    public func getSingleArray(_ value: inout [Swift.Float]) throws {
        var value_abi: COM.COMArray<Swift.Float> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetSingleArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.SingleBinding>.fromABI(consuming: &value_abi)
    }

    public func getDoubleArray(_ value: inout [Swift.Double]) throws {
        var value_abi: COM.COMArray<Swift.Double> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.DoubleBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDoubleArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.DoubleBinding>.fromABI(consuming: &value_abi)
    }

    public func getChar16Array(_ value: inout [WindowsRuntime.Char16]) throws {
        var value_abi: COM.COMArray<Swift.UInt16> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.Char16Binding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetChar16Array(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.Char16Binding>.fromABI(consuming: &value_abi)
    }

    public func getBooleanArray(_ value: inout [Swift.Bool]) throws {
        var value_abi: COM.COMArray<Swift.Bool> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.BooleanBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetBooleanArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.BooleanBinding>.fromABI(consuming: &value_abi)
    }

    public func getStringArray(_ value: inout [Swift.String]) throws {
        var value_abi: COM.COMArray<SWRT_HString?> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetStringArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.fromABI(consuming: &value_abi)
    }

    public func getInspectableArray(_ value: inout [WindowsRuntime.IInspectable?]) throws {
        var value_abi: COM.COMArray<WindowsRuntime.IInspectablePointer?> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.IInspectableBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetInspectableArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.IInspectableBinding>.fromABI(consuming: &value_abi)
    }

    public func getGuidArray(_ value: inout [COM.GUID]) throws {
        var value_abi: COM.COMArray<SWRT_Guid> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.GuidBinding>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetGuidArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsRuntime.GuidBinding>.fromABI(consuming: &value_abi)
    }

    public func getDateTimeArray(_ value: inout [WindowsFoundation_DateTime]) throws {
        var value_abi: COM.COMArray<SWRT_WindowsFoundation_DateTime> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_DateTime>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetDateTimeArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsFoundation_DateTime>.fromABI(consuming: &value_abi)
    }

    public func getTimeSpanArray(_ value: inout [WindowsFoundation_TimeSpan]) throws {
        var value_abi: COM.COMArray<SWRT_WindowsFoundation_TimeSpan> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_TimeSpan>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetTimeSpanArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsFoundation_TimeSpan>.fromABI(consuming: &value_abi)
    }

    public func getPointArray(_ value: inout [WindowsFoundation_Point]) throws {
        var value_abi: COM.COMArray<SWRT_WindowsFoundation_Point> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_Point>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetPointArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsFoundation_Point>.fromABI(consuming: &value_abi)
    }

    public func getSizeArray(_ value: inout [WindowsFoundation_Size]) throws {
        var value_abi: COM.COMArray<SWRT_WindowsFoundation_Size> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_Size>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetSizeArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsFoundation_Size>.fromABI(consuming: &value_abi)
    }

    public func getRectArray(_ value: inout [WindowsFoundation_Rect]) throws {
        var value_abi: COM.COMArray<SWRT_WindowsFoundation_Rect> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsFoundation_Rect>.release(&value_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetRectArray(this, &value_abi.count, &value_abi.pointer))
        value = WindowsRuntime.ArrayBinding<WindowsFoundation_Rect>.fromABI(consuming: &value_abi)
    }
}