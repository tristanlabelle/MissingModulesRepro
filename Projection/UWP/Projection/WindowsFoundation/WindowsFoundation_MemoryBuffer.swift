// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import UWP_ABI

/// Represents a reference counted memory buffer.
public final class WindowsFoundation_MemoryBuffer: WindowsRuntime.WinRTImport<WindowsFoundation_MemoryBufferBinding>, WindowsFoundation_IMemoryBufferProtocol, WindowsFoundation_IClosableProtocol, @unchecked Sendable {
    // MARK: Windows.Foundation.IMemoryBufferFactory members

    public convenience init(_ capacity: Swift.UInt32) throws {
        self.init(_wrapping: try Self._imemoryBufferFactory.create(capacity))
    }

    // MARK: Windows.Foundation.IMemoryBuffer members

    /// Returns a new managed object that implements the IMemoryBufferReference interface.
    /// - Returns: A new managed object that implements the IMemoryBufferReference interface.
    public func createReference() throws -> WindowsFoundation_IMemoryBufferReference {
        try COM.NullResult.unwrap(_interop.createReference())
    }

    // MARK: Windows.Foundation.IClosable members

    /// Disconnects this MemoryBuffer object from the actual memory buffer.
    public func close() throws {
        try _iclosable.close()
    }

    // MARK: Implementation details

    private var _lazyIClosable: COM.COMReference<SWRT_WindowsFoundation_IClosable>.Optional = .none

    internal var _iclosable: COM.COMInterop<SWRT_WindowsFoundation_IClosable> {
        get throws {
            try _lazyIClosable.lazyInitInterop {
                try _queryInterface(uuidof(SWRT_WindowsFoundation_IClosable.self)).cast()
            }
        }
    }

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "Windows.Foundation.MemoryBuffer")
            }
        }
    }

    private static var _lazyIMemoryBufferFactory: COM.COMReference<SWRT_WindowsFoundation_IMemoryBufferFactory>.Optional = .none

    internal static var _imemoryBufferFactory: COM.COMInterop<SWRT_WindowsFoundation_IMemoryBufferFactory> {
        get throws {
            try _lazyIMemoryBufferFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_WindowsFoundation_IMemoryBufferFactory.self)).cast()
            }
        }
    }
}