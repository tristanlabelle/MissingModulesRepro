// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

public enum InspectableBoxing {
    // MARK: WinRTComponent.IInspectableBoxingStatics members

    public static func boxInt32(_ value: Swift.Int32) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_iinspectableBoxingStatics.boxInt32(value))
    }

    public static func unboxInt32(_ value: WindowsRuntime.IInspectable?) throws -> Swift.Int32 {
        try _iinspectableBoxingStatics.unboxInt32(value)
    }

    public static func boxString(_ value: Swift.String) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_iinspectableBoxingStatics.boxString(value))
    }

    public static func unboxString(_ value: WindowsRuntime.IInspectable?) throws -> Swift.String {
        try _iinspectableBoxingStatics.unboxString(value)
    }

    public static func boxMinimalEnum(_ value: MinimalEnum) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_iinspectableBoxingStatics.boxMinimalEnum(value))
    }

    public static func unboxMinimalEnum(_ value: WindowsRuntime.IInspectable?) throws -> MinimalEnum {
        try _iinspectableBoxingStatics.unboxMinimalEnum(value)
    }

    public static func boxMinimalStruct(_ value: MinimalStruct) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_iinspectableBoxingStatics.boxMinimalStruct(value))
    }

    public static func unboxMinimalStruct(_ value: WindowsRuntime.IInspectable?) throws -> MinimalStruct {
        try _iinspectableBoxingStatics.unboxMinimalStruct(value)
    }

    public static func boxMinimalDelegate(_ value: MinimalDelegate?) throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_iinspectableBoxingStatics.boxMinimalDelegate(value))
    }

    public static func unboxMinimalDelegate(_ value: WindowsRuntime.IInspectable?) throws -> MinimalDelegate {
        try COM.NullResult.unwrap(_iinspectableBoxingStatics.unboxMinimalDelegate(value))
    }

    // MARK: Implementation details

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "WinRTComponent.InspectableBoxing")
            }
        }
    }

    private static var _lazyIInspectableBoxingStatics: COM.COMReference<SWRT_WinRTComponent_IInspectableBoxingStatics>.Optional = .none

    internal static var _iinspectableBoxingStatics: COM.COMInterop<SWRT_WinRTComponent_IInspectableBoxingStatics> {
        get throws {
            try _lazyIInspectableBoxingStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_WinRTComponent_IInspectableBoxingStatics.self)).cast()
            }
        }
    }
}