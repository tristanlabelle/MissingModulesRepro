// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

public func uuidof(_: SWRT_WinRTComponent_IArraysStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xDE6C4382, 0xBF57, 0x5AB1, 0x81C6, 0xF6F35E239135)
}

extension COM.COMInterop where ABIStruct == SWRT_WinRTComponent_IArraysStatics {
    public func getLast(_ value: [Swift.String]) throws -> Swift.String {
        var value_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.toABI(value)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.release(&value_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetLast(this, value_abi.count, value_abi.pointer, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func make(_ a: Swift.String, _ b: Swift.String) throws -> [Swift.String] {
        var a_abi = try WindowsRuntime.StringBinding.toABI(a)
        defer { WindowsRuntime.StringBinding.release(&a_abi) }
        var b_abi = try WindowsRuntime.StringBinding.toABI(b)
        defer { WindowsRuntime.StringBinding.release(&b_abi) }
        var _result: COM.COMArray<SWRT_HString?> = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Make(this, a_abi, b_abi, &_result.count, &_result.pointer))
        return WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.fromABI(consuming: &_result)
    }

    public func output(_ a: Swift.String, _ b: Swift.String, _ array: inout [Swift.String]) throws {
        var a_abi = try WindowsRuntime.StringBinding.toABI(a)
        defer { WindowsRuntime.StringBinding.release(&a_abi) }
        var b_abi = try WindowsRuntime.StringBinding.toABI(b)
        defer { WindowsRuntime.StringBinding.release(&b_abi) }
        var array_abi: COM.COMArray<SWRT_HString?> = .init()
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.release(&array_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Output(this, a_abi, b_abi, &array_abi.count, &array_abi.pointer))
        array = WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.fromABI(consuming: &array_abi)
    }

    public func swapFirstLast(_ array: [Swift.String]) throws {
        var array_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.toABI(array)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.StringBinding>.release(&array_abi) }
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.SwapFirstLast(this, array_abi.count, array_abi.pointer))
    }
}