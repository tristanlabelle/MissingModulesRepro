// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

public func uuidof(_: SWRT_WinRTComponent_INumbersStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xABBF928D, 0x6040, 0x511B, 0x8AF1, 0x2F273F8AA830)
}

extension COM.COMInterop where ABIStruct == SWRT_WinRTComponent_INumbersStatics {
    public func not(_ value: Swift.Bool) throws -> Swift.Bool {
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Not(this, value, &_result))
        return _result
    }

    public func incrementUInt8(_ value: Swift.UInt8) throws -> Swift.UInt8 {
        var _result: Swift.UInt8 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IncrementUInt8(this, value, &_result))
        return _result
    }

    public func incrementInt16(_ value: Swift.Int16) throws -> Swift.Int16 {
        var _result: Swift.Int16 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IncrementInt16(this, value, &_result))
        return _result
    }

    public func incrementUInt16(_ value: Swift.UInt16) throws -> Swift.UInt16 {
        var _result: Swift.UInt16 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IncrementUInt16(this, value, &_result))
        return _result
    }

    public func incrementInt32(_ value: Swift.Int32) throws -> Swift.Int32 {
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IncrementInt32(this, value, &_result))
        return _result
    }

    public func incrementUInt32(_ value: Swift.UInt32) throws -> Swift.UInt32 {
        var _result: Swift.UInt32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IncrementUInt32(this, value, &_result))
        return _result
    }

    public func incrementInt64(_ value: Swift.Int64) throws -> Swift.Int64 {
        var _result: Swift.Int64 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IncrementInt64(this, value, &_result))
        return _result
    }

    public func incrementUInt64(_ value: Swift.UInt64) throws -> Swift.UInt64 {
        var _result: Swift.UInt64 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IncrementUInt64(this, value, &_result))
        return _result
    }

    public func negateSingle(_ value: Swift.Float) throws -> Swift.Float {
        var _result: Swift.Float = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.NegateSingle(this, value, &_result))
        return _result
    }

    public func negateDouble(_ value: Swift.Double) throws -> Swift.Double {
        var _result: Swift.Double = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.NegateDouble(this, value, &_result))
        return _result
    }
}