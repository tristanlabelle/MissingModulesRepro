// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

public func uuidof(_: SWRT_WinRTComponent_IMinimalBaseClassStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x4D0F9524, 0x7D43, 0x5906, 0xA431, 0xBFC91570E343)
}

extension COM.COMInterop where ABIStruct == SWRT_WinRTComponent_IMinimalBaseClassStatics {
    public func createBase() throws -> MinimalBaseClass? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WinRTComponent_IMinimalBaseClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateBase(this, &_result))
        return MinimalBaseClassBinding.fromABI(consuming: &_result)
    }

    public func createDerivedAsBase() throws -> MinimalBaseClass? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WinRTComponent_IMinimalBaseClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreateDerivedAsBase(this, &_result))
        return MinimalBaseClassBinding.fromABI(consuming: &_result)
    }

    public func createPrivate() throws -> MinimalBaseClass? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WinRTComponent_IMinimalBaseClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.CreatePrivate(this, &_result))
        return MinimalBaseClassBinding.fromABI(consuming: &_result)
    }

    public func passthrough(_ value: MinimalBaseClass?) throws -> MinimalBaseClass? {
        var value_abi = try MinimalBaseClassBinding.toABI(value)
        defer { MinimalBaseClassBinding.release(&value_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WinRTComponent_IMinimalBaseClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Passthrough(this, value_abi, &_result))
        return MinimalBaseClassBinding.fromABI(consuming: &_result)
    }

    public func getTypeName(_ value: MinimalBaseClass?) throws -> Swift.String {
        var value_abi = try MinimalBaseClassBinding.toABI(value)
        defer { MinimalBaseClassBinding.release(&value_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetTypeName(this, value_abi, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }
}