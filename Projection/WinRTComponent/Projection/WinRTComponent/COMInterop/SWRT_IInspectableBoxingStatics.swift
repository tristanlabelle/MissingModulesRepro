// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

public func uuidof(_: SWRT_WinRTComponent_IInspectableBoxingStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xC9483BA2, 0x8D89, 0x5E18, 0xA79F, 0xF2EC2FA00E93)
}

extension COM.COMInterop where ABIStruct == SWRT_WinRTComponent_IInspectableBoxingStatics {
    public func boxInt32(_ value: Swift.Int32) throws -> WindowsRuntime.IInspectable? {
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.BoxInt32(this, value, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }

    public func unboxInt32(_ value: WindowsRuntime.IInspectable?) throws -> Swift.Int32 {
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        var _result: Swift.Int32 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.UnboxInt32(this, value_abi, &_result))
        return _result
    }

    public func boxString(_ value: Swift.String) throws -> WindowsRuntime.IInspectable? {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.BoxString(this, value_abi, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }

    public func unboxString(_ value: WindowsRuntime.IInspectable?) throws -> Swift.String {
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.UnboxString(this, value_abi, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func boxMinimalEnum(_ value: MinimalEnum) throws -> WindowsRuntime.IInspectable? {
        let value_abi = MinimalEnum.toABI(value)
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.BoxMinimalEnum(this, value_abi, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }

    public func unboxMinimalEnum(_ value: WindowsRuntime.IInspectable?) throws -> MinimalEnum {
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        var _result: SWRT_WinRTComponent_MinimalEnum = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.UnboxMinimalEnum(this, value_abi, &_result))
        return MinimalEnum.fromABI(_result)
    }

    public func boxMinimalStruct(_ value: MinimalStruct) throws -> WindowsRuntime.IInspectable? {
        let value_abi = MinimalStruct.toABI(value)
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.BoxMinimalStruct(this, value_abi, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }

    public func unboxMinimalStruct(_ value: WindowsRuntime.IInspectable?) throws -> MinimalStruct {
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        var _result: SWRT_WinRTComponent_MinimalStruct = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.UnboxMinimalStruct(this, value_abi, &_result))
        return MinimalStruct.fromABI(_result)
    }

    public func boxMinimalDelegate(_ value: MinimalDelegate?) throws -> WindowsRuntime.IInspectable? {
        var value_abi = try MinimalDelegateBinding.toABI(value)
        defer { MinimalDelegateBinding.release(&value_abi) }
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.BoxMinimalDelegate(this, value_abi, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }

    public func unboxMinimalDelegate(_ value: WindowsRuntime.IInspectable?) throws -> MinimalDelegate? {
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        var _result: Swift.UnsafeMutablePointer<SWRT_WinRTComponent_MinimalDelegate>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.UnboxMinimalDelegate(this, value_abi, &_result))
        return MinimalDelegateBinding.fromABI(consuming: &_result)
    }
}