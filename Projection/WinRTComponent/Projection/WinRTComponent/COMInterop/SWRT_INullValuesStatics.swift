// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

public func uuidof(_: SWRT_WinRTComponent_INullValuesStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0xA9741EE4, 0xCD45, 0x5BEB, 0x872E, 0x791E05B7F86D)
}

extension COM.COMInterop where ABIStruct == SWRT_WinRTComponent_INullValuesStatics {
    public func isObjectNull(_ value: WindowsRuntime.IInspectable?) throws -> Swift.Bool {
        var value_abi = try WindowsRuntime.IInspectableBinding.toABI(value)
        defer { WindowsRuntime.IInspectableBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsObjectNull(this, value_abi, &_result))
        return _result
    }

    public func isInterfaceNull(_ value: IMinimalInterface?) throws -> Swift.Bool {
        var value_abi = try IMinimalInterfaceBinding.toABI(value)
        defer { IMinimalInterfaceBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsInterfaceNull(this, value_abi, &_result))
        return _result
    }

    public func isClassNull(_ value: MinimalClass?) throws -> Swift.Bool {
        var value_abi = try MinimalClassBinding.toABI(value)
        defer { MinimalClassBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsClassNull(this, value_abi, &_result))
        return _result
    }

    public func isDelegateNull(_ value: MinimalDelegate?) throws -> Swift.Bool {
        var value_abi = try MinimalDelegateBinding.toABI(value)
        defer { MinimalDelegateBinding.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsDelegateNull(this, value_abi, &_result))
        return _result
    }

    public func isReferenceNull(_ value: Swift.Int32?) throws -> Swift.Bool {
        var value_abi = try WindowsRuntime.Int32Binding.IReferenceToOptional.toABI(value)
        defer { WindowsRuntime.Int32Binding.IReferenceToOptional.release(&value_abi) }
        var _result: Swift.Bool = false
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.IsReferenceNull(this, value_abi, &_result))
        return _result
    }

    public func getNullObject() throws -> WindowsRuntime.IInspectable? {
        var _result: WindowsRuntime.IInspectablePointer? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetNullObject(this, &_result))
        return WindowsRuntime.IInspectableBinding.fromABI(consuming: &_result)
    }

    public func getNullInterface() throws -> IMinimalInterface? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WinRTComponent_IMinimalInterface>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetNullInterface(this, &_result))
        return IMinimalInterfaceBinding.fromABI(consuming: &_result)
    }

    public func getNullClass() throws -> MinimalClass? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WinRTComponent_IMinimalClass>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetNullClass(this, &_result))
        return MinimalClassBinding.fromABI(consuming: &_result)
    }

    public func getNullDelegate() throws -> MinimalDelegate? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WinRTComponent_MinimalDelegate>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetNullDelegate(this, &_result))
        return MinimalDelegateBinding.fromABI(consuming: &_result)
    }

    public func getNullReference() throws -> Swift.Int32? {
        var _result: Swift.UnsafeMutablePointer<SWRT_WindowsFoundation_IReference>? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.GetNullReference(this, &_result))
        return WindowsRuntime.Int32Binding.IReferenceToOptional.fromABI(consuming: &_result)
    }
}