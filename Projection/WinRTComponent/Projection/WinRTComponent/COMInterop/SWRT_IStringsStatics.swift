// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

public func uuidof(_: SWRT_WinRTComponent_IStringsStatics.Type) -> COM.COMInterfaceID {
    COMInterfaceID(0x5A325FE6, 0xBDA5, 0x5BB3, 0x8965, 0x2366F1390EFB)
}

extension COM.COMInterop where ABIStruct == SWRT_WinRTComponent_IStringsStatics {
    public func roundtrip(_ value: Swift.String) throws -> Swift.String {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.Roundtrip(this, value_abi, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func roundtripChar(_ value: WindowsRuntime.Char16) throws -> WindowsRuntime.Char16 {
        let value_abi = WindowsRuntime.Char16Binding.toABI(value)
        var _result: Swift.UInt16 = 0
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.RoundtripChar(this, value_abi, &_result))
        return WindowsRuntime.Char16Binding.fromABI(_result)
    }

    public func fromChars(_ chars: [WindowsRuntime.Char16]) throws -> Swift.String {
        var chars_abi = try WindowsRuntime.ArrayBinding<WindowsRuntime.Char16Binding>.toABI(chars)
        defer { WindowsRuntime.ArrayBinding<WindowsRuntime.Char16Binding>.release(&chars_abi) }
        var _result: SWRT_HString? = nil
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.FromChars(this, chars_abi.count, chars_abi.pointer, &_result))
        return WindowsRuntime.StringBinding.fromABI(consuming: &_result)
    }

    public func toChars(_ value: Swift.String) throws -> [WindowsRuntime.Char16] {
        var value_abi = try WindowsRuntime.StringBinding.toABI(value)
        defer { WindowsRuntime.StringBinding.release(&value_abi) }
        var _result: COM.COMArray<Swift.UInt16> = .init()
        try WinRTError.fromABI(this.pointee.VirtualTable.pointee.ToChars(this, value_abi, &_result.count, &_result.pointer))
        return WindowsRuntime.ArrayBinding<WindowsRuntime.Char16Binding>.fromABI(consuming: &_result)
    }
}