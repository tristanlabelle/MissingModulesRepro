// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

public final class OverloadedSum: WindowsRuntime.WinRTImport<OverloadedSumBinding>, @unchecked Sendable {
    // MARK: IActivationFactory members

    public convenience init() throws {
        self.init(_wrapping: COM.COMReference(transferringRef: try Self._iactivationFactory.activateInstance(binding: OverloadedSumBinding.self)))
    }

    // MARK: WinRTComponent.IOverloadedSumFactory members

    public convenience init(_ a: Swift.Int32) throws {
        self.init(_wrapping: try Self._ioverloadedSumFactory.createInstance(a))
    }

    public convenience init(_ a: Swift.Int32, _ b: Swift.Int32) throws {
        self.init(_wrapping: try Self._ioverloadedSumFactory.createInstance2(a, b))
    }

    // MARK: WinRTComponent.IOverloadedSum members

    public var result: Swift.Int32 {
        try! self._result()
    }

    public func _result() throws -> Swift.Int32 {
        try _interop.get_Result()
    }

    // MARK: WinRTComponent.IOverloadedSumStatics members

    public static func of() throws -> Swift.Int32 {
        try _ioverloadedSumStatics.of0()
    }

    public static func of(_ a: Swift.Int32) throws -> Swift.Int32 {
        try _ioverloadedSumStatics.of1(a)
    }

    public static func of(_ a: Swift.Int32, _ b: Swift.Int32) throws -> Swift.Int32 {
        try _ioverloadedSumStatics.of(a, b)
    }

    // MARK: Implementation details

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "WinRTComponent.OverloadedSum")
            }
        }
    }

    private static var _lazyIOverloadedSumFactory: COM.COMReference<SWRT_WinRTComponent_IOverloadedSumFactory>.Optional = .none

    internal static var _ioverloadedSumFactory: COM.COMInterop<SWRT_WinRTComponent_IOverloadedSumFactory> {
        get throws {
            try _lazyIOverloadedSumFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_WinRTComponent_IOverloadedSumFactory.self)).cast()
            }
        }
    }

    private static var _lazyIOverloadedSumStatics: COM.COMReference<SWRT_WinRTComponent_IOverloadedSumStatics>.Optional = .none

    internal static var _ioverloadedSumStatics: COM.COMInterop<SWRT_WinRTComponent_IOverloadedSumStatics> {
        get throws {
            try _lazyIOverloadedSumStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_WinRTComponent_IOverloadedSumStatics.self)).cast()
            }
        }
    }
}