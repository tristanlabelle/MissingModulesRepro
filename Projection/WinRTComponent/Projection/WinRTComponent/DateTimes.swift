// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

public enum DateTimes {
    // MARK: WinRTComponent.IDateTimesStatics members

    public static func fromSeconds(_ seconds: Swift.Int32) throws -> WindowsFoundation_TimeSpan {
        try _idateTimesStatics.fromSeconds(seconds)
    }

    public static func roundToSeconds(_ timeSpan: WindowsFoundation_TimeSpan) throws -> Swift.Int32 {
        try _idateTimesStatics.roundToSeconds(timeSpan)
    }

    public static func fromUTCYearMonthDay(_ year: Swift.Int32, _ month: Swift.Int32, _ day: Swift.Int32) throws -> WindowsFoundation_DateTime {
        try _idateTimesStatics.fromUTCYearMonthDay(year, month, day)
    }

    public static func toUTCYearMonthDay(_ dateTime: WindowsFoundation_DateTime, _ year: inout Swift.Int32, _ month: inout Swift.Int32, _ day: inout Swift.Int32) throws {
        try _idateTimesStatics.toUTCYearMonthDay(dateTime, &year, &month, &day)
    }

    // MARK: Implementation details

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "WinRTComponent.DateTimes")
            }
        }
    }

    private static var _lazyIDateTimesStatics: COM.COMReference<SWRT_WinRTComponent_IDateTimesStatics>.Optional = .none

    internal static var _idateTimesStatics: COM.COMInterop<SWRT_WinRTComponent_IDateTimesStatics> {
        get throws {
            try _lazyIDateTimesStatics.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_WinRTComponent_IDateTimesStatics.self)).cast()
            }
        }
    }
}