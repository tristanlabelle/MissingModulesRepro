// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

public enum MinimalDelegateBinding: WindowsRuntime.DelegateBinding {
    public typealias SwiftObject = MinimalDelegate
    public typealias ABIStruct = SWRT_WinRTComponent_MinimalDelegate

    public static let typeName = "WinRTComponent.IMinimalDelegate"

    public static var interfaceID: COM.COMInterfaceID {
        uuidof(ABIStruct.self)
    }

    public static var ireferenceID: COM.COMInterfaceID {
        COMInterfaceID(0xF60350D0, 0xA3AB, 0x56EF, 0x886B, 0xECC2428813D0)
    }

    public static var ireferenceArrayID: COM.COMInterfaceID {
        COMInterfaceID(0xBDC95000, 0x07A1, 0x5C9E, 0x9B2A, 0xC6813C029B7E)
    }

    public static func _wrap(_ reference: consuming ABIReference) -> SwiftObject {
        Import(_wrapping: consume reference).invoke
    }

    public static func toCOM(_ object: @escaping SwiftObject) throws -> ABIReference {
        ExportedDelegate<Self>(object).toCOM()
    }

    private final class Import: COMImport<MinimalDelegateBinding> {
        public func invoke() throws {
            try _interop.invoke()
        }
    }

    public static var virtualTablePointer: UnsafeRawPointer {
        .init(withUnsafePointer(to: &virtualTable) { $0 })
    }

    private static var virtualTable = SWRT_WinRTComponent_MinimalDelegate_VirtualTable(
        QueryInterface: { IUnknownVirtualTable.QueryInterface($0, $1, $2) },
        AddRef: { IUnknownVirtualTable.AddRef($0) },
        Release: { IUnknownVirtualTable.Release($0) },
        Invoke: { this in _implement(this) { this in
            try this()
        } }
    )
}