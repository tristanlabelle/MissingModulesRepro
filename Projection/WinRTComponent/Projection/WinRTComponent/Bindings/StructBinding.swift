// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

extension Struct: WindowsRuntime.StructBinding {
    public typealias SwiftValue = Self
    public typealias ABIValue = SWRT_WinRTComponent_Struct

    public static let typeName = "WinRTComponent.Struct"

    public static var ireferenceID: COM.COMInterfaceID {
        COMInterfaceID(0xDDDEECC4, 0x6F79, 0x5665, 0xB242, 0xFD939F04049B)
    }

    public static var ireferenceArrayID: COM.COMInterfaceID {
        COMInterfaceID(0xC582123A, 0xEB47, 0x5319, 0x9415, 0x5F1B4BDAD196)
    }

    public static var abiDefaultValue: SWRT_WinRTComponent_Struct {
        .init()
    }

    public static func fromABI(_ value: SWRT_WinRTComponent_Struct) -> Self {
        .init(
            int32: value.Int32,
            string: WindowsRuntime.StringBinding.fromABI(value.String),
            reference: WindowsRuntime.Int32Binding.IReferenceToOptional.fromABI(value.Reference),
            nested: LeafStruct.fromABI(value.Nested)
        )
    }

    public static func toABI(_ value: Self) throws -> SWRT_WinRTComponent_Struct {
        .init(
            Int32: value.int32,
            String: try WindowsRuntime.StringBinding.toABI(value.string),
            Reference: try WindowsRuntime.Int32Binding.IReferenceToOptional.toABI(value.reference),
            Nested: try LeafStruct.toABI(value.nested)
        )
    }

    public static func release(_ value: inout SWRT_WinRTComponent_Struct) {
        WindowsRuntime.StringBinding.release(&value.String)
        WindowsRuntime.Int32Binding.IReferenceToOptional.release(&value.Reference)
        LeafStruct.release(&value.Nested)
    }
}