// Generated by swift-winrt
// swiftlint:disable all

import WindowsRuntime
import WinRTComponent_ABI
import UWP

public final class WeakReferencer: WindowsRuntime.WinRTImport<WeakReferencerBinding>, @unchecked Sendable {
    // MARK: WinRTComponent.IWeakReferencerFactory members

    public convenience init(_ target: WindowsRuntime.IInspectable?) throws {
        self.init(_wrapping: try Self._iweakReferencerFactory.createInstance(target))
    }

    // MARK: WinRTComponent.IWeakReferencer members

    public var target: WindowsRuntime.IInspectable! {
        try! NullResult.catch(self._target())
    }

    public func _target() throws -> WindowsRuntime.IInspectable {
        try COM.NullResult.unwrap(_interop.get_Target())
    }

    // MARK: Implementation details

    private static var _lazyIActivationFactory: COM.COMReference<SWRT_IActivationFactory>.Optional = .init()

    private static var _iactivationFactory: COM.COMInterop<SWRT_IActivationFactory> {
        get throws {
            try _lazyIActivationFactory.lazyInitInterop {
                try WindowsRuntime.activationFactoryResolver.resolve(runtimeClass: "WinRTComponent.WeakReferencer")
            }
        }
    }

    private static var _lazyIWeakReferencerFactory: COM.COMReference<SWRT_WinRTComponent_IWeakReferencerFactory>.Optional = .none

    internal static var _iweakReferencerFactory: COM.COMInterop<SWRT_WinRTComponent_IWeakReferencerFactory> {
        get throws {
            try _lazyIWeakReferencerFactory.lazyInitInterop {
                try _iactivationFactory.queryInterface(uuidof(SWRT_WinRTComponent_IWeakReferencerFactory.self)).cast()
            }
        }
    }
}